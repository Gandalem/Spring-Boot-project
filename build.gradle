plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.mysite'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//lombok 라이브러리 등록
	compileOnly 'org.projectlombok:lombok' //컴파일 단계에서만 필요한 경우에 사용됨
	annotationProcessor 'org.projectlombok:lombok' //컴파일 단계에서 어노테이션을 분석 처리함 
	
	// devtools : 수정 변경시 자동으로 톰켓을 restart (중지 => 시작) : 자동으로 컴파일 
	// development : 실제 서비스로 빌드 할때는 빌드 되지 않도록 설정 , 개발시에만 필요함.
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	//H2 라이브러리
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JPA 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	
	//Tymeleaf : view page, 백엔드에서 처리한 데이터를 .html 에 넣어줄수 있도록
		//처리해주는 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	//Spring 에서 제공해주는 유호성 검사 라이브러리 : from에서 반값이나 글자수 제한
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	//스프링 기반 인증과 권한을 담당하는 라이브러리 : 
		// 인증(Authenticate)은 로그인을 의미한다.
		// 권한(Authorize)은 인증된 사용자가 어떤것을 할수있는지를 의미한다.
	implementation 'org.springframework.boot:spring-boot-starter-security'
 	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
 	//마크다운 설치
 	implementation 'org.commonmark:commonmark:0.21.0'
	
	
}

tasks.named('test') {
	useJUnitPlatform()
}
